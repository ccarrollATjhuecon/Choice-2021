(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



SetupForSims;
\[GothicCapitalG]=1.00;
\[ScriptP]Std=\[CurlyTheta]Std=0.05;
\[ScriptP]Group=\[ScriptP]Poor=1;
AddObsToPermLev:=AppendTo[\[ScriptP],\[ScriptP]Group+RandomReal[NormalDistribution[0,\[ScriptP]Std]]];
Do[AddObs,{NObs}];
Print[FitLine=LinearModelFit[Transpose[{\[ScriptY],\[ScriptC]}],{1,y},y]];FitPlot=Plot[FitLine,{y,Min[\[ScriptY]],Max[\[ScriptY]]},PlotStyle->Black];
Degree45=Plot[y,{y,0,1.5},PlotStyle->Black];
\[ScriptC]eq\[ScriptP]Color=Black;
\[ScriptC]eq\[ScriptP]Plot=ListPlot[Transpose[{\[ScriptP],\[ScriptC]}],PlotStyle->\[ScriptC]eq\[ScriptP]Color];
\[ScriptY]PIHPlot=ListPlot[Transpose[{\[ScriptY],\[ScriptP]}],PlotStyle->\[ScriptY]Color];
\[ScriptC]iVs\[ScriptY]iPlot=Show[\[ScriptC]eq\[ScriptP]Plot,\[ScriptY]PIHPlot,AxesLabel->{"\[ScriptY]","\[ScriptC]"}];
\[ScriptC]iVs\[ScriptY]iVsFitOneGroupPlot=Show[\[ScriptC]iVs\[ScriptY]iPlot,FitPlot,Degree45
,PlotRange->{{0,1.5},{0,1.5}}
,AxesOrigin->{0.,0.}
];
Print[ExportFigure[\[ScriptC]iVs\[ScriptY]iVsFitOneGroupPlot,"CiVsYiVsFitOneGroupPlotv3"]];


\[ScriptP]Group=\[ScriptP]Rich=1.2;Do[AddObs,{NObs}]; (* Now make a group with a higher permanent income *)


Print[LinearModelFit[Transpose[{\[ScriptY],\[ScriptC]}],{1,y},y]];


\[ScriptY]Color=Blue;
\[ScriptC]eq\[ScriptP]Plot=ListPlot[Transpose[{\[ScriptP],\[ScriptC]}],PlotStyle->\[ScriptC]eq\[ScriptP]Color];
\[ScriptY]PIHPlot2=ListPlot[Transpose[{\[ScriptY],\[ScriptC]}],PlotStyle->\[ScriptY]Color];
\[ScriptC]iVs\[ScriptY]iTwoGroupsPlot=Show[\[ScriptC]eq\[ScriptP]Plot,\[ScriptY]PIHPlot2,\[ScriptY]PIHPlot,AxesLabel->{"\[ScriptY]","\[ScriptC]"}
,PlotRange->{{1-5 \[CurlyTheta]Std,\[ScriptP]Rich+3 \[CurlyTheta]Std},Automatic}
,AxesOrigin->{1-5 \[CurlyTheta]Std,Min[\[ScriptY]]}
];
Print[ExportFigure[\[ScriptC]iVs\[ScriptY]iTwoGroupsPlot,"CiVsYiTwoGroupsPlot"]];





\[ScriptY]\[ScriptC]All=Transpose[{\[ScriptY],\[ScriptC]}];
\[ScriptC]Rich=Take[\[ScriptC],-100];
\[ScriptY]Rich=Take[\[ScriptY],-100];
\[ScriptY]\[ScriptC]Rich=Transpose[{\[ScriptY]Rich,\[ScriptC]Rich}];
\[ScriptC]Poor=Take[\[ScriptC],100];
\[ScriptY]Poor=Take[\[ScriptY],100];
\[ScriptY]\[ScriptC]Poor=Transpose[{\[ScriptY]Poor,\[ScriptC]Poor}];
\[ScriptC]MeanRich=Mean[\[ScriptC]Rich];
\[ScriptY]MeanRich=Mean[\[ScriptY]Rich];
\[ScriptC]MeanPoor=Mean[\[ScriptC]Poor];
\[ScriptY]MeanPoor=Mean[\[ScriptY]Poor];
\[ScriptC]ByGroup={\[ScriptC]MeanPoor,\[ScriptC]MeanRich};
\[ScriptY]ByGroup={\[ScriptY]MeanPoor,\[ScriptY]MeanRich};


Print[MatrixForm[\[ScriptY]\[ScriptC]Grouped=Transpose[{\[ScriptY]ByGroup,\[ScriptC]ByGroup}],TableHeadings->{{" Poor "," Rich "},{"   \[ScriptY]","   \[ScriptC]"}}]];


Print[Fit[\[ScriptY]\[ScriptC]Grouped,{1,y},y]];


Print[Fit[\[ScriptY]\[ScriptC]All,{1,y},y]];


Print[Fit[\[ScriptY]\[ScriptC]Rich,{1,y},y]];


Print[Fit[\[ScriptY]\[ScriptC]Poor,{1,y},y]];
